[
  {
    "objectID": "EF308_Group_Assignment_pynb.html",
    "href": "EF308_Group_Assignment_pynb.html",
    "title": "Import Dataset",
    "section": "",
    "text": "import numpy as np\nimport pandas as pd\n\n# Import visualisation packages\n\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\n# import statistics package\n\nimport statsmodels.api as sm\nimport statsmodels.tsa.api as smt   # new\nimport statsmodels.tsa.stattools as st\n\nimport scipy.stats as stats\n\n\nImport Dataset\n\ncreditdata = pd.read_csv('BankChurners.csv')\ncreditdata\n\n\n\n  \n    \n\n\n\n\n\n\nCLIENTNUM\nAttrition_Flag\nCustomer_Age\nGender\nDependent_count\nEducation_Level\nMarital_Status\nIncome_Category\nCard_Category\nMonths_on_book\n...\nCredit_Limit\nTotal_Revolving_Bal\nAvg_Open_To_Buy\nTotal_Amt_Chng_Q4_Q1\nTotal_Trans_Amt\nTotal_Trans_Ct\nTotal_Ct_Chng_Q4_Q1\nAvg_Utilization_Ratio\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2\n\n\n\n\n0\n768805383\nExisting Customer\n45\nM\n3\nHigh School\nMarried\n$60K - $80K\nBlue\n39\n...\n12691.0\n777\n11914.0\n1.335\n1144\n42\n1.625\n0.061\n0.000093\n0.999910\n\n\n1\n818770008\nExisting Customer\n49\nF\n5\nGraduate\nSingle\nLess than $40K\nBlue\n44\n...\n8256.0\n864\n7392.0\n1.541\n1291\n33\n3.714\n0.105\n0.000057\n0.999940\n\n\n2\n713982108\nExisting Customer\n51\nM\n3\nGraduate\nMarried\n$80K - $120K\nBlue\n36\n...\n3418.0\n0\n3418.0\n2.594\n1887\n20\n2.333\n0.000\n0.000021\n0.999980\n\n\n3\n769911858\nExisting Customer\n40\nF\n4\nHigh School\nUnknown\nLess than $40K\nBlue\n34\n...\n3313.0\n2517\n796.0\n1.405\n1171\n20\n2.333\n0.760\n0.000134\n0.999870\n\n\n4\n709106358\nExisting Customer\n40\nM\n3\nUneducated\nMarried\n$60K - $80K\nBlue\n21\n...\n4716.0\n0\n4716.0\n2.175\n816\n28\n2.500\n0.000\n0.000022\n0.999980\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n10122\n772366833\nExisting Customer\n50\nM\n2\nGraduate\nSingle\n$40K - $60K\nBlue\n40\n...\n4003.0\n1851\n2152.0\n0.703\n15476\n117\n0.857\n0.462\n0.000191\n0.999810\n\n\n10123\n710638233\nAttrited Customer\n41\nM\n2\nUnknown\nDivorced\n$40K - $60K\nBlue\n25\n...\n4277.0\n2186\n2091.0\n0.804\n8764\n69\n0.683\n0.511\n0.995270\n0.004729\n\n\n10124\n716506083\nAttrited Customer\n44\nF\n1\nHigh School\nMarried\nLess than $40K\nBlue\n36\n...\n5409.0\n0\n5409.0\n0.819\n10291\n60\n0.818\n0.000\n0.997880\n0.002118\n\n\n10125\n717406983\nAttrited Customer\n30\nM\n2\nGraduate\nUnknown\n$40K - $60K\nBlue\n36\n...\n5281.0\n0\n5281.0\n0.535\n8395\n62\n0.722\n0.000\n0.996710\n0.003294\n\n\n10126\n714337233\nAttrited Customer\n43\nF\n2\nGraduate\nMarried\nLess than $40K\nSilver\n25\n...\n10388.0\n1961\n8427.0\n0.703\n10294\n61\n0.649\n0.189\n0.996620\n0.003377\n\n\n\n\n10127 rows Ã— 23 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n\nfrom google.colab import drive\ndrive.mount('/content/drive')\n\nMounted at /content/drive\n\n\n\n\nInformation from Dataset\n\ncreditdata.describe()\n\n\n\n  \n    \n\n\n\n\n\n\nCLIENTNUM\nCustomer_Age\nDependent_count\nMonths_on_book\nTotal_Relationship_Count\nMonths_Inactive_12_mon\nContacts_Count_12_mon\nCredit_Limit\nTotal_Revolving_Bal\nAvg_Open_To_Buy\nTotal_Amt_Chng_Q4_Q1\nTotal_Trans_Amt\nTotal_Trans_Ct\nTotal_Ct_Chng_Q4_Q1\nAvg_Utilization_Ratio\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2\n\n\n\n\ncount\n1.012700e+04\n10127.000000\n10127.000000\n10127.000000\n10127.000000\n10127.000000\n10127.000000\n10127.000000\n10127.000000\n10127.000000\n10127.000000\n10127.000000\n10127.000000\n10127.000000\n10127.000000\n10127.000000\n10127.000000\n\n\nmean\n7.391776e+08\n46.325960\n2.346203\n35.928409\n3.812580\n2.341167\n2.455317\n8631.953698\n1162.814061\n7469.139637\n0.759941\n4404.086304\n64.858695\n0.712222\n0.274894\n0.159997\n0.840003\n\n\nstd\n3.690378e+07\n8.016814\n1.298908\n7.986416\n1.554408\n1.010622\n1.106225\n9088.776650\n814.987335\n9090.685324\n0.219207\n3397.129254\n23.472570\n0.238086\n0.275691\n0.365301\n0.365301\n\n\nmin\n7.080821e+08\n26.000000\n0.000000\n13.000000\n1.000000\n0.000000\n0.000000\n1438.300000\n0.000000\n3.000000\n0.000000\n510.000000\n10.000000\n0.000000\n0.000000\n0.000008\n0.000420\n\n\n25%\n7.130368e+08\n41.000000\n1.000000\n31.000000\n3.000000\n2.000000\n2.000000\n2555.000000\n359.000000\n1324.500000\n0.631000\n2155.500000\n45.000000\n0.582000\n0.023000\n0.000099\n0.999660\n\n\n50%\n7.179264e+08\n46.000000\n2.000000\n36.000000\n4.000000\n2.000000\n2.000000\n4549.000000\n1276.000000\n3474.000000\n0.736000\n3899.000000\n67.000000\n0.702000\n0.176000\n0.000181\n0.999820\n\n\n75%\n7.731435e+08\n52.000000\n3.000000\n40.000000\n5.000000\n3.000000\n3.000000\n11067.500000\n1784.000000\n9859.000000\n0.859000\n4741.000000\n81.000000\n0.818000\n0.503000\n0.000337\n0.999900\n\n\nmax\n8.283431e+08\n73.000000\n5.000000\n56.000000\n6.000000\n6.000000\n6.000000\n34516.000000\n2517.000000\n34516.000000\n3.397000\n18484.000000\n139.000000\n3.714000\n0.999000\n0.999580\n0.999990\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n\ncreditdata.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 10127 entries, 0 to 10126\nData columns (total 23 columns):\n #   Column                                                                                                                              Non-Null Count  Dtype  \n---  ------                                                                                                                              --------------  -----  \n 0   CLIENTNUM                                                                                                                           10127 non-null  int64  \n 1   Attrition_Flag                                                                                                                      10127 non-null  object \n 2   Customer_Age                                                                                                                        10127 non-null  int64  \n 3   Gender                                                                                                                              10127 non-null  object \n 4   Dependent_count                                                                                                                     10127 non-null  int64  \n 5   Education_Level                                                                                                                     10127 non-null  object \n 6   Marital_Status                                                                                                                      10127 non-null  object \n 7   Income_Category                                                                                                                     10127 non-null  object \n 8   Card_Category                                                                                                                       10127 non-null  object \n 9   Months_on_book                                                                                                                      10127 non-null  int64  \n 10  Total_Relationship_Count                                                                                                            10127 non-null  int64  \n 11  Months_Inactive_12_mon                                                                                                              10127 non-null  int64  \n 12  Contacts_Count_12_mon                                                                                                               10127 non-null  int64  \n 13  Credit_Limit                                                                                                                        10127 non-null  float64\n 14  Total_Revolving_Bal                                                                                                                 10127 non-null  int64  \n 15  Avg_Open_To_Buy                                                                                                                     10127 non-null  float64\n 16  Total_Amt_Chng_Q4_Q1                                                                                                                10127 non-null  float64\n 17  Total_Trans_Amt                                                                                                                     10127 non-null  int64  \n 18  Total_Trans_Ct                                                                                                                      10127 non-null  int64  \n 19  Total_Ct_Chng_Q4_Q1                                                                                                                 10127 non-null  float64\n 20  Avg_Utilization_Ratio                                                                                                               10127 non-null  float64\n 21  Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1  10127 non-null  float64\n 22  Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2  10127 non-null  float64\ndtypes: float64(7), int64(10), object(6)\nmemory usage: 1.8+ MB\n\n\n\n\nData Cleaning\n\n\nCheck for Null Values\n\n# Handling missing / NaN Values\n\n(creditdata.isna().sum(axis=0))\nprint(creditdata.isna().sum(axis=0)/len(creditdata))\n\nCLIENTNUM                                                                                                                             0.0\nAttrition_Flag                                                                                                                        0.0\nCustomer_Age                                                                                                                          0.0\nGender                                                                                                                                0.0\nDependent_count                                                                                                                       0.0\nEducation_Level                                                                                                                       0.0\nMarital_Status                                                                                                                        0.0\nIncome_Category                                                                                                                       0.0\nCard_Category                                                                                                                         0.0\nMonths_on_book                                                                                                                        0.0\nTotal_Relationship_Count                                                                                                              0.0\nMonths_Inactive_12_mon                                                                                                                0.0\nContacts_Count_12_mon                                                                                                                 0.0\nCredit_Limit                                                                                                                          0.0\nTotal_Revolving_Bal                                                                                                                   0.0\nAvg_Open_To_Buy                                                                                                                       0.0\nTotal_Amt_Chng_Q4_Q1                                                                                                                  0.0\nTotal_Trans_Amt                                                                                                                       0.0\nTotal_Trans_Ct                                                                                                                        0.0\nTotal_Ct_Chng_Q4_Q1                                                                                                                   0.0\nAvg_Utilization_Ratio                                                                                                                 0.0\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1    0.0\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2    0.0\ndtype: float64\n\n\nShows no null values in dataset\n\n\nCheck for Duplicates\n\n# Check for duplicates\nduplicate_rows = creditdata[creditdata.duplicated()]\n\n# Print duplicate rows\nprint(\"Duplicate rows:\")\nprint(duplicate_rows)\n\nDuplicate rows:\nEmpty DataFrame\nColumns: [CLIENTNUM, Attrition_Flag, Customer_Age, Gender, Dependent_count, Education_Level, Marital_Status, Income_Category, Card_Category, Months_on_book, Total_Relationship_Count, Months_Inactive_12_mon, Contacts_Count_12_mon, Credit_Limit, Total_Revolving_Bal, Avg_Open_To_Buy, Total_Amt_Chng_Q4_Q1, Total_Trans_Amt, Total_Trans_Ct, Total_Ct_Chng_Q4_Q1, Avg_Utilization_Ratio, Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1, Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2]\nIndex: []\n\n[0 rows x 23 columns]\n\n\n\nprint(\"There are \" + str(creditdata.duplicated().sum()) + \" duplicated rows\")\n\nThere are 0 duplicated rows\n\n\nIllustrates no duplicates in our dataset\n\n\nChecking Distribution of Data\n\nmean = creditdata.mean()\nprint ('Mean:')\nprint(mean)\n\nmode = creditdata.mode()\nprint ('\\nMode:')\nprint (mode)\n\nmedian = creditdata.median()\nprint ('\\nMedian:')\nprint(median)\n\nMean:\nCLIENTNUM                                                                                                                             7.391776e+08\nAttrition_Flag                                                                                                                        1.606596e-01\nCustomer_Age                                                                                                                          4.632596e+01\nGender                                                                                                                                5.290807e-01\nDependent_count                                                                                                                       2.346203e+00\nEducation_Level                                                                                                                       1.974622e+00\nMarital_Status                                                                                                                        7.588624e-01\nIncome_Category                                                                                                                       4.523535e+03\nCard_Category                                                                                                                         1.269873e-01\nMonths_on_book                                                                                                                        3.592841e+01\nTotal_Relationship_Count                                                                                                              3.812580e+00\nMonths_Inactive_12_mon                                                                                                                2.341167e+00\nContacts_Count_12_mon                                                                                                                 2.455317e+00\nCredit_Limit                                                                                                                          8.631954e+03\nTotal_Revolving_Bal                                                                                                                   1.162814e+03\nAvg_Open_To_Buy                                                                                                                       7.469140e+03\nTotal_Amt_Chng_Q4_Q1                                                                                                                  7.599407e-01\nTotal_Trans_Amt                                                                                                                       4.404086e+03\nTotal_Trans_Ct                                                                                                                        6.485869e+01\nTotal_Ct_Chng_Q4_Q1                                                                                                                   7.122224e-01\nAvg_Utilization_Ratio                                                                                                                 2.748936e-01\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1    1.599975e-01\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2    8.400026e-01\ndtype: float64\n\nMode:\n       CLIENTNUM  Attrition_Flag  Customer_Age  Gender  Dependent_count  \\\n0      708082083             0.0          44.0     1.0              3.0   \n1      708083283             NaN           NaN     NaN              NaN   \n2      708084558             NaN           NaN     NaN              NaN   \n3      708085458             NaN           NaN     NaN              NaN   \n4      708086958             NaN           NaN     NaN              NaN   \n...          ...             ...           ...     ...              ...   \n10122  828288333             NaN           NaN     NaN              NaN   \n10123  828291858             NaN           NaN     NaN              NaN   \n10124  828294933             NaN           NaN     NaN              NaN   \n10125  828298908             NaN           NaN     NaN              NaN   \n10126  828343083             NaN           NaN     NaN              NaN   \n\n       Education_Level  Marital_Status  Income_Category  Card_Category  \\\n0                  1.0             0.0           2500.0            0.0   \n1                  NaN             NaN              NaN            NaN   \n2                  NaN             NaN              NaN            NaN   \n3                  NaN             NaN              NaN            NaN   \n4                  NaN             NaN              NaN            NaN   \n...                ...             ...              ...            ...   \n10122              NaN             NaN              NaN            NaN   \n10123              NaN             NaN              NaN            NaN   \n10124              NaN             NaN              NaN            NaN   \n10125              NaN             NaN              NaN            NaN   \n10126              NaN             NaN              NaN            NaN   \n\n       Months_on_book  ...  Credit_Limit  Total_Revolving_Bal  \\\n0                36.0  ...       34516.0                  0.0   \n1                 NaN  ...           NaN                  NaN   \n2                 NaN  ...           NaN                  NaN   \n3                 NaN  ...           NaN                  NaN   \n4                 NaN  ...           NaN                  NaN   \n...               ...  ...           ...                  ...   \n10122             NaN  ...           NaN                  NaN   \n10123             NaN  ...           NaN                  NaN   \n10124             NaN  ...           NaN                  NaN   \n10125             NaN  ...           NaN                  NaN   \n10126             NaN  ...           NaN                  NaN   \n\n       Avg_Open_To_Buy  Total_Amt_Chng_Q4_Q1  Total_Trans_Amt  Total_Trans_Ct  \\\n0               1438.3                 0.791           4253.0            81.0   \n1                  NaN                   NaN           4509.0             NaN   \n2                  NaN                   NaN              NaN             NaN   \n3                  NaN                   NaN              NaN             NaN   \n4                  NaN                   NaN              NaN             NaN   \n...                ...                   ...              ...             ...   \n10122              NaN                   NaN              NaN             NaN   \n10123              NaN                   NaN              NaN             NaN   \n10124              NaN                   NaN              NaN             NaN   \n10125              NaN                   NaN              NaN             NaN   \n10126              NaN                   NaN              NaN             NaN   \n\n       Total_Ct_Chng_Q4_Q1  Avg_Utilization_Ratio  \\\n0                    0.667                    0.0   \n1                      NaN                    NaN   \n2                      NaN                    NaN   \n3                      NaN                    NaN   \n4                      NaN                    NaN   \n...                    ...                    ...   \n10122                  NaN                    NaN   \n10123                  NaN                    NaN   \n10124                  NaN                    NaN   \n10125                  NaN                    NaN   \n10126                  NaN                    NaN   \n\n       Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1  \\\n0                                               0.000199                                                                                    \n1                                                    NaN                                                                                    \n2                                                    NaN                                                                                    \n3                                                    NaN                                                                                    \n4                                                    NaN                                                                                    \n...                                                  ...                                                                                    \n10122                                                NaN                                                                                    \n10123                                                NaN                                                                                    \n10124                                                NaN                                                                                    \n10125                                                NaN                                                                                    \n10126                                                NaN                                                                                    \n\n       Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2  \n0                                                0.99989                                                                                   \n1                                                    NaN                                                                                   \n2                                                    NaN                                                                                   \n3                                                    NaN                                                                                   \n4                                                    NaN                                                                                   \n...                                                  ...                                                                                   \n10122                                                NaN                                                                                   \n10123                                                NaN                                                                                   \n10124                                                NaN                                                                                   \n10125                                                NaN                                                                                   \n10126                                                NaN                                                                                   \n\n[10127 rows x 23 columns]\n\nMedian:\nCLIENTNUM                                                                                                                             7.179264e+08\nAttrition_Flag                                                                                                                        0.000000e+00\nCustomer_Age                                                                                                                          4.600000e+01\nGender                                                                                                                                1.000000e+00\nDependent_count                                                                                                                       2.000000e+00\nEducation_Level                                                                                                                       1.000000e+00\nMarital_Status                                                                                                                        1.000000e+00\nIncome_Category                                                                                                                       4.166000e+03\nCard_Category                                                                                                                         0.000000e+00\nMonths_on_book                                                                                                                        3.600000e+01\nTotal_Relationship_Count                                                                                                              4.000000e+00\nMonths_Inactive_12_mon                                                                                                                2.000000e+00\nContacts_Count_12_mon                                                                                                                 2.000000e+00\nCredit_Limit                                                                                                                          4.549000e+03\nTotal_Revolving_Bal                                                                                                                   1.276000e+03\nAvg_Open_To_Buy                                                                                                                       3.474000e+03\nTotal_Amt_Chng_Q4_Q1                                                                                                                  7.360000e-01\nTotal_Trans_Amt                                                                                                                       3.899000e+03\nTotal_Trans_Ct                                                                                                                        6.700000e+01\nTotal_Ct_Chng_Q4_Q1                                                                                                                   7.020000e-01\nAvg_Utilization_Ratio                                                                                                                 1.760000e-01\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1    1.814600e-04\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2    9.998200e-01\ndtype: float64\n\n\n\n# Investigate Distribution\n\n# Calculate skewness for all columns\nskewness = creditdata.skew()\nprint ('Skewness:')\nprint(skewness)\n\n# Calculate kurtosis for all columns\nkurtosis = creditdata.kurtosis()\nprint ('\\nKurtosis:')\nprint(kurtosis)\n\nSkewness:\nCLIENTNUM                                                                                                                             0.995601\nAttrition_Flag                                                                                                                        1.848449\nCustomer_Age                                                                                                                         -0.033605\nGender                                                                                                                               -0.116537\nDependent_count                                                                                                                      -0.020826\nEducation_Level                                                                                                                       0.735743\nMarital_Status                                                                                                                        1.139634\nIncome_Category                                                                                                                       0.708535\nCard_Category                                                                                                                         3.685754\nMonths_on_book                                                                                                                       -0.106565\nTotal_Relationship_Count                                                                                                             -0.162452\nMonths_Inactive_12_mon                                                                                                                0.633061\nContacts_Count_12_mon                                                                                                                 0.011006\nCredit_Limit                                                                                                                          1.666726\nTotal_Revolving_Bal                                                                                                                  -0.148837\nAvg_Open_To_Buy                                                                                                                       1.661697\nTotal_Amt_Chng_Q4_Q1                                                                                                                  1.732063\nTotal_Trans_Amt                                                                                                                       2.041003\nTotal_Trans_Ct                                                                                                                        0.153673\nTotal_Ct_Chng_Q4_Q1                                                                                                                   2.064031\nAvg_Utilization_Ratio                                                                                                                 0.718008\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1    1.848538\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2   -1.848538\ndtype: float64\n\nKurtosis:\nCLIENTNUM                                                                                                                             -0.615640\nAttrition_Flag                                                                                                                         1.417043\nCustomer_Age                                                                                                                          -0.288620\nGender                                                                                                                                -1.986811\nDependent_count                                                                                                                       -0.683017\nEducation_Level                                                                                                                       -0.353465\nMarital_Status                                                                                                                         0.661861\nIncome_Category                                                                                                                       -0.182368\nCard_Category                                                                                                                         12.124388\nMonths_on_book                                                                                                                         0.400100\nTotal_Relationship_Count                                                                                                              -1.006131\nMonths_Inactive_12_mon                                                                                                                 1.098523\nContacts_Count_12_mon                                                                                                                  0.000863\nCredit_Limit                                                                                                                           1.808989\nTotal_Revolving_Bal                                                                                                                   -1.145992\nAvg_Open_To_Buy                                                                                                                        1.798617\nTotal_Amt_Chng_Q4_Q1                                                                                                                   9.993501\nTotal_Trans_Amt                                                                                                                        3.894023\nTotal_Trans_Ct                                                                                                                        -0.367163\nTotal_Ct_Chng_Q4_Q1                                                                                                                   15.689293\nAvg_Utilization_Ratio                                                                                                                 -0.794972\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1     1.417535\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2     1.417535\ndtype: float64\n\n\n\nfig = px.histogram(creditdata, x=\"Total_Trans_Amt\")\nfig.show()\n\n\n\n\n                                \n                                            \n\n\n\n\n\n# Variance\n\ncreditdata['Credit_Limit'].var()\n\n82605860.99764162\n\n\n\n# Plotting distributions to see if there is actually positive skewness and low kurtosis\n\nfig = px.histogram(creditdata, x=\"Credit_Limit\")\nfig.show()\n\n\n\n\n                                \n                                            \n\n\n\n\nWe notice the data is not normally distributed based on the summary statistics from the mean, median, mode, standard deviation, skewness, and kurtosis.\nWe further illustrate this using the Shapiro test from the SciPy library (scipy.stats.shapiro) to check for normality.\n\n# Statistical Test\n\nshapiro_test_stat, shapiro_p_value = stats.shapiro(creditdata)\nprint(f'Shapiro-Wilk Test - Test Statistic: {shapiro_test_stat}, p-value: {shapiro_p_value}')\n\n# Interpret the result\nif shapiro_p_value &gt; 0.05:\n    print(\"The data may be approximately normally distributed.\")\nelse:\n    print(\"The data may not be normally distributed.\")\n\nShapiro-Wilk Test - Test Statistic: 0.4254326820373535, p-value: 0.0\nThe data may not be normally distributed.\n\n\n/usr/local/lib/python3.10/dist-packages/scipy/stats/_morestats.py:1882: UserWarning: p-value may not be accurate for N &gt; 5000.\n  warnings.warn(\"p-value may not be accurate for N &gt; 5000.\")\n\n\nDue to large data set - the test was run on the head and tail sample of the dataset\nResults shows the data is not normally distributed\n\n# Statistical Test\n# Check distribution of data\n\nshapiro_test_stat, shapiro_p_value = stats.shapiro(creditdata.head())\nprint(f'Shapiro-Wilk Test - Test Statistic: {shapiro_test_stat}, p-value: {shapiro_p_value}')\n\n# Interpret the result\nif shapiro_p_value &gt; 0.05:\n    print(\"The data may be approximately normally distributed.\")\nelse:\n    print(\"The data may not be normally distributed.\")\n\nShapiro-Wilk Test - Test Statistic: 0.20834064483642578, p-value: 3.792890690174683e-22\nThe data may not be normally distributed.\n\n\n\n# Statistical Test\n# Check distribution of data\n\nshapiro_test_stat, shapiro_p_value = stats.shapiro(creditdata.tail())\nprint(f'Shapiro-Wilk Test - Test Statistic: {shapiro_test_stat}, p-value: {shapiro_p_value}')\n\n# Interpret the result\nif shapiro_p_value &gt; 0.05:\n    print(\"The data may be approximately normally distributed.\")\nelse:\n    print(\"The data may not be normally distributed.\")\n\nShapiro-Wilk Test - Test Statistic: 0.2072911262512207, p-value: 3.6853998721405436e-22\nThe data may not be normally distributed.\n\n\n\n\nIdentifying Outliers\n\nUsing IQR Method\nThe IQR Method will be used as the data is not normally distributed.\n\n# Find quantiles\n\ncreditdata.quantile([.1, .25, .5, .75])\n\n\n\n  \n    \n\n\n\n\n\n\nCLIENTNUM\nAttrition_Flag\nCustomer_Age\nGender\nDependent_count\nEducation_Level\nMarital_Status\nIncome_Category\nCard_Category\nMonths_on_book\n...\nCredit_Limit\nTotal_Revolving_Bal\nAvg_Open_To_Buy\nTotal_Amt_Chng_Q4_Q1\nTotal_Trans_Amt\nTotal_Trans_Ct\nTotal_Ct_Chng_Q4_Q1\nAvg_Utilization_Ratio\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2\n\n\n\n\n0.10\n710160513.0\n0.0\n36.0\n0.0\n1.0\n0.0\n0.0\n0.0\n0.0\n26.0\n...\n1762.0\n0.0\n683.0\n0.531\n1501.0\n33.0\n0.452\n0.000\n0.000057\n0.005088\n\n\n0.25\n713036770.5\n0.0\n41.0\n0.0\n1.0\n1.0\n0.0\n2500.0\n0.0\n31.0\n...\n2555.0\n359.0\n1324.5\n0.631\n2155.5\n45.0\n0.582\n0.023\n0.000099\n0.999660\n\n\n0.50\n717926358.0\n0.0\n46.0\n1.0\n2.0\n1.0\n1.0\n4166.0\n0.0\n36.0\n...\n4549.0\n1276.0\n3474.0\n0.736\n3899.0\n67.0\n0.702\n0.176\n0.000181\n0.999820\n\n\n0.75\n773143533.0\n0.0\n52.0\n1.0\n3.0\n3.0\n1.0\n5833.0\n0.0\n40.0\n...\n11067.5\n1784.0\n9859.0\n0.859\n4741.0\n81.0\n0.818\n0.503\n0.000337\n0.999900\n\n\n\n\n4 rows Ã— 23 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n\n\nIdentifying Columns with Outliers\n\n# Select numerical columns (assuming they are of type int or float)\nnumeric_cols = creditdata.select_dtypes(include=['int', 'float'])\n\n# Calculate the first quartile (Q1)\nQ1 = numeric_cols.quantile(0.25)\n\n# Calculate the third quartile (Q3)\nQ3 = numeric_cols.quantile(0.75)\n\n# Calculate the interquartile range (IQR)\nIQR = Q3 - Q1\n\n# Identify outliers\nlower_bound = Q1 - 1.5 * IQR\nupper_bound = Q3 + 1.5 * IQR\n\n# Data points outside the lower and upper bounds are considered outliers\noutliers = (numeric_cols &lt; lower_bound) | (numeric_cols &gt; upper_bound)\n\n# Print columns with outliers\ncolumns_with_outliers = outliers.any()\nprint(\"Columns with outliers:\")\nprint(columns_with_outliers[columns_with_outliers])\n\nColumns with outliers:\nAttrition_Flag                                                                                                                        True\nCustomer_Age                                                                                                                          True\nMarital_Status                                                                                                                        True\nIncome_Category                                                                                                                       True\nCard_Category                                                                                                                         True\nMonths_on_book                                                                                                                        True\nMonths_Inactive_12_mon                                                                                                                True\nContacts_Count_12_mon                                                                                                                 True\nCredit_Limit                                                                                                                          True\nAvg_Open_To_Buy                                                                                                                       True\nTotal_Amt_Chng_Q4_Q1                                                                                                                  True\nTotal_Trans_Amt                                                                                                                       True\nTotal_Trans_Ct                                                                                                                        True\nTotal_Ct_Chng_Q4_Q1                                                                                                                   True\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1    True\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2    True\ndtype: bool\n\n\n\n\nVisualisation of IQR\nWe can use the visuals below to investigate and visually see the outliers for each column.\n\n# Interquartile range\n\nfig = px.box(creditdata, y=\"Months_on_book\")\nfig.show()\n\n# Note:\n# Upper and lower fences cordon off outliers from the bulk of data in a set.\n# Fences are usually found with the following formulas:\n\n# Upper fence = Q3 + (1.5 * IQR)\n# Lower fence = Q1 â€” (1.5 * IQR).\n\n# We can visualise where these outliers may appear on this graph\n\n\n\n\n                                \n                                            \n\n\n\n\nUpon review, we have determined these outliers to be true outliers, and hence we have not removed them from our dataset.\n\n\n\n\nConvert datatype from â€˜Objectâ€™ to â€˜Intâ€™ to run regressions\n\n# Verify the data types of the columns\nprint(creditdata.dtypes)\n\nCLIENTNUM                                                                                                                               int64\nAttrition_Flag                                                                                                                         object\nCustomer_Age                                                                                                                            int64\nGender                                                                                                                                 object\nDependent_count                                                                                                                         int64\nEducation_Level                                                                                                                        object\nMarital_Status                                                                                                                         object\nIncome_Category                                                                                                                        object\nCard_Category                                                                                                                          object\nMonths_on_book                                                                                                                          int64\nTotal_Relationship_Count                                                                                                                int64\nMonths_Inactive_12_mon                                                                                                                  int64\nContacts_Count_12_mon                                                                                                                   int64\nCredit_Limit                                                                                                                          float64\nTotal_Revolving_Bal                                                                                                                     int64\nAvg_Open_To_Buy                                                                                                                       float64\nTotal_Amt_Chng_Q4_Q1                                                                                                                  float64\nTotal_Trans_Amt                                                                                                                         int64\nTotal_Trans_Ct                                                                                                                          int64\nTotal_Ct_Chng_Q4_Q1                                                                                                                   float64\nAvg_Utilization_Ratio                                                                                                                 float64\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1    float64\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2    float64\ndtype: object\n\n\n\n# Finding unique counts\n\ncreditdata.nunique()\n\nCLIENTNUM                                                                                                                             10127\nAttrition_Flag                                                                                                                            2\nCustomer_Age                                                                                                                             45\nGender                                                                                                                                    2\nDependent_count                                                                                                                           6\nEducation_Level                                                                                                                           7\nMarital_Status                                                                                                                            4\nIncome_Category                                                                                                                           6\nCard_Category                                                                                                                             4\nMonths_on_book                                                                                                                           44\nTotal_Relationship_Count                                                                                                                  6\nMonths_Inactive_12_mon                                                                                                                    7\nContacts_Count_12_mon                                                                                                                     7\nCredit_Limit                                                                                                                           6205\nTotal_Revolving_Bal                                                                                                                    1974\nAvg_Open_To_Buy                                                                                                                        6813\nTotal_Amt_Chng_Q4_Q1                                                                                                                   1158\nTotal_Trans_Amt                                                                                                                        5033\nTotal_Trans_Ct                                                                                                                          126\nTotal_Ct_Chng_Q4_Q1                                                                                                                     830\nAvg_Utilization_Ratio                                                                                                                   964\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1     1704\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2      640\ndtype: int64\n\n\n\n# Display the value of each unique datapoint\n\ncreditdata['Gender'].unique()\n\narray(['M', 'F'], dtype=object)\n\n\n\ncreditdata['Attrition_Flag'].unique()\n\narray(['Existing Customer', 'Attrited Customer'], dtype=object)\n\n\n\ncreditdata['Education_Level'].unique()\n\narray(['High School', 'Graduate', 'Uneducated', 'Unknown', 'College',\n       'Post-Graduate', 'Doctorate'], dtype=object)\n\n\n\ncreditdata['Marital_Status'].unique()\n\narray(['Married', 'Single', 'Unknown', 'Divorced'], dtype=object)\n\n\n\ncreditdata['Income_Category'].unique()\n\narray(['$60K - $80K', 'Less than $40K', '$80K - $120K', '$40K - $60K',\n       '$120K +', 'Unknown'], dtype=object)\n\n\n\ncreditdata['Card_Category'].unique()\n\narray(['Blue', 'Gold', 'Silver', 'Platinum'], dtype=object)\n\n\n\n# Gender\n\n# Define a dictionary to map 'M' to 0 and 'F' to 1\ngender_mapping = {'M': 0, 'F': 1}\n\n# Map 'M' and 'F' values to integers\ncreditdata['Gender'] = creditdata['Gender'].map(gender_mapping)\n\n# Verify the result\nprint(creditdata['Gender'])\n\n\n# MALE = 0\n# FEMALE = 1\n\n0        0\n1        1\n2        0\n3        1\n4        0\n        ..\n10122    0\n10123    0\n10124    1\n10125    0\n10126    1\nName: Gender, Length: 10127, dtype: int64\n\n\n\n# Attrition_Flag\n\nattrition_mapping = {'Existing Customer': 0, 'Attrited Customer': 1}\n\ncreditdata['Attrition_Flag'] = creditdata['Attrition_Flag'].map(attrition_mapping)\n\nprint(creditdata['Attrition_Flag'])\n\n\n# Existing customer = 0\n# Attrited customer = 1\n\n0        0\n1        0\n2        0\n3        0\n4        0\n        ..\n10122    0\n10123    1\n10124    1\n10125    1\n10126    1\nName: Attrition_Flag, Length: 10127, dtype: int64\n\n\n\n# Education_Level\n\neducation_mapping = {'High School': 0, 'Graduate': 1, 'Uneducated': 2, 'Unknown': 3, 'College': 4, 'Post-Graduate': 5, 'Doctorate': 6}\n\ncreditdata['Education_Level'] = creditdata['Education_Level'].map(education_mapping)\n\nprint(creditdata['Education_Level'])\n\n\n# High School = 0\n# Graduate = 1\n# Uneducated = 2\n# Unknown = 3\n# College = 4\n# Post-Graduate = 5\n# Doctorate = 6\n\n0        0\n1        1\n2        1\n3        0\n4        2\n        ..\n10122    1\n10123    3\n10124    0\n10125    1\n10126    1\nName: Education_Level, Length: 10127, dtype: int64\n\n\n\n# Marital_Status\n\nmarital_mapping = {'Married': 0, 'Single': 1, 'Unknown': 2, 'Divorced': 3}\n\ncreditdata['Marital_Status'] = creditdata['Marital_Status'].map(marital_mapping)\n\nprint(creditdata['Marital_Status'])\n\n\n# Married = 0\n# Single = 1\n# Unknown = 2\n# Divorced = 3\n\n0        0\n1        1\n2        0\n3        2\n4        0\n        ..\n10122    1\n10123    3\n10124    0\n10125    2\n10126    0\nName: Marital_Status, Length: 10127, dtype: int64\n\n\n\n# Card_Category\n\ncard_mapping = {'Blue': 0, 'Gold': 1, 'Silver': 2, 'Platinum': 3}\n\ncreditdata['Card_Category'] = creditdata['Card_Category'].map(card_mapping)\n\nprint(creditdata['Card_Category'])\n\n\n# Blue = 0\n# Gold = 1\n# Silver = 2\n# Platinum = 3\n\n0        0\n1        0\n2        0\n3        0\n4        0\n        ..\n10122    0\n10123    0\n10124    0\n10125    0\n10126    2\nName: Card_Category, Length: 10127, dtype: int64\n\n\n\n# Income_Category\n\nincome_mapping = {'Less than $40K': 2500, '$40K - $60K': 4166, '$60K - $80K': 5833, '$80K - $120K': 8333, '$120K +': 11666, 'Unknown': 0}\n\ncreditdata['Income_Category'] = creditdata['Income_Category'].map(income_mapping)\n\nprint(creditdata['Income_Category'])\n\n# Less than $40K = 0\n# $40K - $60K = 1\n# $60K - $80K = 2\n# $80K - $120K = 3\n# $120K+ = 4\n# Unknown = 5\n\n0        5833\n1        2500\n2        8333\n3        2500\n4        5833\n         ... \n10122    4166\n10123    4166\n10124    2500\n10125    4166\n10126    2500\nName: Income_Category, Length: 10127, dtype: int64\n\n\n\ncreditdata\n\n# shows updated table\n\n\n\n  \n    \n\n\n\n\n\n\nCLIENTNUM\nAttrition_Flag\nCustomer_Age\nGender\nDependent_count\nEducation_Level\nMarital_Status\nIncome_Category\nCard_Category\nMonths_on_book\n...\nCredit_Limit\nTotal_Revolving_Bal\nAvg_Open_To_Buy\nTotal_Amt_Chng_Q4_Q1\nTotal_Trans_Amt\nTotal_Trans_Ct\nTotal_Ct_Chng_Q4_Q1\nAvg_Utilization_Ratio\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1\nNaive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2\n\n\n\n\n0\n768805383\n0\n45\n0\n3\n0\n0\n5833\n0\n39\n...\n12691.0\n777\n11914.0\n1.335\n1144\n42\n1.625\n0.061\n0.000093\n0.999910\n\n\n1\n818770008\n0\n49\n1\n5\n1\n1\n2500\n0\n44\n...\n8256.0\n864\n7392.0\n1.541\n1291\n33\n3.714\n0.105\n0.000057\n0.999940\n\n\n2\n713982108\n0\n51\n0\n3\n1\n0\n8333\n0\n36\n...\n3418.0\n0\n3418.0\n2.594\n1887\n20\n2.333\n0.000\n0.000021\n0.999980\n\n\n3\n769911858\n0\n40\n1\n4\n0\n2\n2500\n0\n34\n...\n3313.0\n2517\n796.0\n1.405\n1171\n20\n2.333\n0.760\n0.000134\n0.999870\n\n\n4\n709106358\n0\n40\n0\n3\n2\n0\n5833\n0\n21\n...\n4716.0\n0\n4716.0\n2.175\n816\n28\n2.500\n0.000\n0.000022\n0.999980\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n10122\n772366833\n0\n50\n0\n2\n1\n1\n4166\n0\n40\n...\n4003.0\n1851\n2152.0\n0.703\n15476\n117\n0.857\n0.462\n0.000191\n0.999810\n\n\n10123\n710638233\n1\n41\n0\n2\n3\n3\n4166\n0\n25\n...\n4277.0\n2186\n2091.0\n0.804\n8764\n69\n0.683\n0.511\n0.995270\n0.004729\n\n\n10124\n716506083\n1\n44\n1\n1\n0\n0\n2500\n0\n36\n...\n5409.0\n0\n5409.0\n0.819\n10291\n60\n0.818\n0.000\n0.997880\n0.002118\n\n\n10125\n717406983\n1\n30\n0\n2\n1\n2\n4166\n0\n36\n...\n5281.0\n0\n5281.0\n0.535\n8395\n62\n0.722\n0.000\n0.996710\n0.003294\n\n\n10126\n714337233\n1\n43\n1\n2\n1\n0\n2500\n2\n25\n...\n10388.0\n1961\n8427.0\n0.703\n10294\n61\n0.649\n0.189\n0.996620\n0.003377\n\n\n\n\n10127 rows Ã— 23 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n\ncreditdata.info()\n\n# shows datatype is now int64\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 10127 entries, 0 to 10126\nData columns (total 23 columns):\n #   Column                                                                                                                              Non-Null Count  Dtype  \n---  ------                                                                                                                              --------------  -----  \n 0   CLIENTNUM                                                                                                                           10127 non-null  int64  \n 1   Attrition_Flag                                                                                                                      10127 non-null  int64  \n 2   Customer_Age                                                                                                                        10127 non-null  int64  \n 3   Gender                                                                                                                              10127 non-null  int64  \n 4   Dependent_count                                                                                                                     10127 non-null  int64  \n 5   Education_Level                                                                                                                     10127 non-null  int64  \n 6   Marital_Status                                                                                                                      10127 non-null  int64  \n 7   Income_Category                                                                                                                     10127 non-null  int64  \n 8   Card_Category                                                                                                                       10127 non-null  int64  \n 9   Months_on_book                                                                                                                      10127 non-null  int64  \n 10  Total_Relationship_Count                                                                                                            10127 non-null  int64  \n 11  Months_Inactive_12_mon                                                                                                              10127 non-null  int64  \n 12  Contacts_Count_12_mon                                                                                                               10127 non-null  int64  \n 13  Credit_Limit                                                                                                                        10127 non-null  float64\n 14  Total_Revolving_Bal                                                                                                                 10127 non-null  int64  \n 15  Avg_Open_To_Buy                                                                                                                     10127 non-null  float64\n 16  Total_Amt_Chng_Q4_Q1                                                                                                                10127 non-null  float64\n 17  Total_Trans_Amt                                                                                                                     10127 non-null  int64  \n 18  Total_Trans_Ct                                                                                                                      10127 non-null  int64  \n 19  Total_Ct_Chng_Q4_Q1                                                                                                                 10127 non-null  float64\n 20  Avg_Utilization_Ratio                                                                                                               10127 non-null  float64\n 21  Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1  10127 non-null  float64\n 22  Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2  10127 non-null  float64\ndtypes: float64(7), int64(16)\nmemory usage: 1.8 MB\n\n\n\n\nRemove unnecessary columns\n\n# List of columns to remove\ncolumns_to_remove = [\n    \"Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1\",\n    \"Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2\",\n    \"Attrition_Flag\",\n    \"Dependent_count\",\n    \"Marital_Status\",\n    \"Education_Level\",\n    \"Months_on_book\",\n    \"Total_Relationship_Count\",\n    \"Months_Inactive_12_mon\",\n    \"Contacts_Count_12_mon\",\n    \"Credit_Limit\",\n    \"Total_Revolving_Bal\",\n    \"Avg_Open_To_Buy\",\n    \"Total_Amt_Chng_Q4_Q1\",\n    \"Total_Ct_Chng_Q4_Q1\",\n    \"Avg_Utilization_Ratio\"\n]\n\n# Removing the columns\ncreditdata = creditdata.drop(columns=columns_to_remove)\n\n# Displaying the first rows of the DataFrame for verification\nprint(creditdata.head())\n\n\n   CLIENTNUM  Customer_Age Gender Income_Category Card_Category  \\\n0  768805383            45      M     $60K - $80K          Blue   \n1  818770008            49      F  Less than $40K          Blue   \n2  713982108            51      M    $80K - $120K          Blue   \n3  769911858            40      F  Less than $40K          Blue   \n4  709106358            40      M     $60K - $80K          Blue   \n\n   Total_Trans_Amt  Total_Trans_Ct  \n0             1144              42  \n1             1291              33  \n2             1887              20  \n3             1171              20  \n4              816              28  \n\n\n\ncreditdata\n\n\n\n  \n    \n\n\n\n\n\n\nCLIENTNUM\nCustomer_Age\nGender\nIncome_Category\nCard_Category\nTotal_Trans_Amt\nTotal_Trans_Ct\n\n\n\n\n0\n768805383\n45\nM\n$60K - $80K\nBlue\n1144\n42\n\n\n1\n818770008\n49\nF\nLess than $40K\nBlue\n1291\n33\n\n\n2\n713982108\n51\nM\n$80K - $120K\nBlue\n1887\n20\n\n\n3\n769911858\n40\nF\nLess than $40K\nBlue\n1171\n20\n\n\n4\n709106358\n40\nM\n$60K - $80K\nBlue\n816\n28\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n10122\n772366833\n50\nM\n$40K - $60K\nBlue\n15476\n117\n\n\n10123\n710638233\n41\nM\n$40K - $60K\nBlue\n8764\n69\n\n\n10124\n716506083\n44\nF\nLess than $40K\nBlue\n10291\n60\n\n\n10125\n717406983\n30\nM\n$40K - $60K\nBlue\n8395\n62\n\n\n10126\n714337233\n43\nF\nLess than $40K\nSilver\n10294\n61\n\n\n\n\n10127 rows Ã— 7 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n\n# @title Income_Category\n\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\ncreditdata.groupby('Income_Category').size().plot(kind='barh', color=sns.palettes.mpl_palette('Dark2'))\nplt.gca().spines[['top', 'right',]].set_visible(False)\n\n\n\n\n\n\n\n\n\n\nCreation of a new column to show total round-up per month, with 50 centimes as the average rounding.\n\ncreditdata['Roundup_Amt'] = creditdata['Total_Trans_Ct'] * 0.5\nprint(creditdata.head())\n\n   CLIENTNUM  Customer_Age  Gender  Income_Category  Card_Category  \\\n0  768805383            45       0             5833              0   \n1  818770008            49       1             2500              0   \n2  713982108            51       0             8333              0   \n3  769911858            40       1             2500              0   \n4  709106358            40       0             5833              0   \n\n   Total_Trans_Amt  Total_Trans_Ct  Roundup_Amt  \n0             1144              42         21.0  \n1             1291              33         16.5  \n2             1887              20         10.0  \n3             1171              20         10.0  \n4              816              28         14.0  \n\n\n\n\nCreation of a new column showing the total commissions Revolut takes per customer thanks to the round-up.\n\ncreditdata['Comission'] = creditdata['Roundup_Amt'] * 0.0025\nprint(creditdata.head())\n\n   CLIENTNUM  Customer_Age  Gender  Income_Category  Card_Category  \\\n0  768805383            45       0             5833              0   \n1  818770008            49       1             2500              0   \n2  713982108            51       0             8333              0   \n3  769911858            40       1             2500              0   \n4  709106358            40       0             5833              0   \n\n   Total_Trans_Amt  Total_Trans_Ct  Roundup_Amt  Comission  \n0             1144              42         21.0    0.05250  \n1             1291              33         16.5    0.04125  \n2             1887              20         10.0    0.02500  \n3             1171              20         10.0    0.02500  \n4              816              28         14.0    0.03500  \n\n\n\ntotal_comission = creditdata['Comission'].sum()\n\nprint(\"Total Comission:\", total_comission)\n\nTotal Comission: 821.03\n\n\n\n\nRegression to identify links between data\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error, r2_score\n\n# Assuming creditdata is your DataFrame and contains the columns 'Income_Category' and 'Total_Trans_Ct'\n# If Income_Category is not already numeric, you should convert it or use the mapping we previously discussed.\n\n# Splitting the data into independent (X) and dependent (y) variables\nX = creditdata[['Income_Category']]  # X is capitalized because it's a DataFrame\ny = creditdata['Total_Trans_Ct']     # y is lowercase because it's a Series\n\n# Splitting the data into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)\n\n# Creating a LinearRegression instance\nmodel = LinearRegression()\n\n# Training the model\nmodel.fit(X_train, y_train)\n\n# Making predictions on the test set\ny_pred = model.predict(X_test)\n\n# Model evaluation\nprint(f\"Coefficient: {model.coef_}\")\nprint(f\"Intercept: {model.intercept_}\")\nprint(f\"Mean squared error: {mean_squared_error(y_test, y_pred)}\")\nprint(f\"Coefficient of determination (R^2): {r2_score(y_test, y_pred)}\")\n\nCoefficient: [-0.00039349]\nIntercept: 66.50637735936112\nMean squared error: 552.8150400550494\nCoefficient of determination (R^2): 0.0012085822605355512\n\n\n\nimport matplotlib.pyplot as plt\n\n# Plotting the data points\nplt.scatter(X_test, y_test, color='black', label='Actual Data')\n\n# Plotting the regression line\nplt.plot(X_test, y_pred, color='blue', linewidth=3, label='Regression Line')\n\n# Adding titles and legends\nplt.title('Linear Regression between Income_Category and Total_Trans_Ct')\nplt.xlabel('Income_Category')\nplt.ylabel('Total_Trans_Ct')\nplt.legend()\n\n# Displaying the plot\nplt.show()\n\n\n\n\n\n\n\n\n\n# Splitting the data into independent (X) and dependent (y) variables\nX = creditdata[['Total_Trans_Ct']]  # Independent variable\ny = creditdata['Total_Trans_Amt']    # Dependent variable\n\n# Splitting the data into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)\n\n# Creating and training the model\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\n\n# Making predictions on the test set\ny_pred = model.predict(X_test)\n\n# Model evaluation\nprint(f\"Coefficient: {model.coef_}\")\nprint(f\"Intercept: {model.intercept_}\")\nprint(f\"Mean squared error: {mean_squared_error(y_test, y_pred)}\")\nprint(f\"Coefficient of determination (R^2): {r2_score(y_test, y_pred)}\")\n# Plotting the data points\nplt.scatter(X_test, y_test, color='black', label='Actual Data')\n\n# Plotting the regression line\nplt.plot(X_test, y_pred, color='blue', linewidth=3, label='Regression Line')\n\n# Adding titles and legends\nplt.title('Linear Regression between Total_Trans_Ct and Total_Trans_Amt')\nplt.xlabel('Total_Trans_Ct')\nplt.ylabel('Total_Trans_Amt')\nplt.legend()\n\n# Displaying the plot\nplt.show()\n\nCoefficient: [116.82585339]\nIntercept: -3178.068060637376\nMean squared error: 4075650.3453727453\nCoefficient of determination (R^2): 0.6493811295635363\n\n\n\n\n\n\n\n\n\n\n# Splitting the data into independent (X) and dependent (y) variables\nX = creditdata[['Income_Category']]  # Independent variable\ny = creditdata['Total_Trans_Amt']    # Dependent variable\n\n# Splitting the data into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)\n\n# Creating and training the model\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\n\n# Making predictions on the test set\ny_pred = model.predict(X_test)\n\n# Model evaluation\nprint(f\"Coefficient: {model.coef_}\")\nprint(f\"Intercept: {model.intercept_}\")\nprint(f\"Mean squared error: {mean_squared_error(y_test, y_pred)}\")\nprint(f\"Coefficient of determination (R^2): {r2_score(y_test, y_pred)}\")\n# Plotting the data points\nplt.scatter(X_test, y_test, color='black', label='Actual Data')\n\n# Plotting the regression line\nplt.plot(X_test, y_pred, color='blue', linewidth=3, label='Regression Line')\n\n# Adding titles and legends\nplt.title('Linear Regression between Income_Category and Total_Trans_Amt')\nplt.xlabel('Income_Category')\nplt.ylabel('Total_Trans_Amt')\nplt.legend()\n\n# Displaying the plot\nplt.show()\n\nCoefficient: [0.01913702]\nIntercept: 4296.744044014778\nMean squared error: 11627432.483310323\nCoefficient of determination (R^2): -0.00028140245226571103\n\n\n\n\n\n\n\n\n\nthe most important regression, as it will enable us to forecast how much money revolut can make based on the number of transactions.\n\n# Independent variable\nX = creditdata[['Total_Trans_Ct']]\n# Dependent variable\ny = creditdata['Comission']\n\n# Creating and training the model\nmodel = LinearRegression()\nmodel.fit(X, y)\n\n# Making predictions\ny_pred = model.predict(X)\n\n# Calculating statistics\nprint(f\"Coefficient: {model.coef_[0]}\")\nprint(f\"Intercept: {model.intercept_}\")\nmse = mean_squared_error(y, y_pred)\nprint(f\"Mean squared error: {mse}\")\nr2 = r2_score(y, y_pred)\nprint(f\"Coefficient of determination (R^2): {r2}\")\n\n# Plotting\nplt.scatter(X, y, color='black', label='Actual Data')\nplt.plot(X, y_pred, color='blue', linewidth=3, label='Regression Line')\nplt.title('Linear Regression between Total_Trans_Ct and Comission')\nplt.xlabel('Total_Trans_Ct')\nplt.ylabel('Comission')\nplt.legend()\nplt.show()\n\nCoefficient: 0.0012500000000000005\nIntercept: -4.163336342344337e-17\nMean squared error: 3.3297566266276025e-34\nCoefficient of determination (R^2): 1.0\n\n\n\n\n\n\n\n\n\n\ncreditdata.to_csv('nouveau_creditdata.csv', index=False)\n\n\nfrom google.colab import files\nfiles.download('nouveau_creditdata.csv')"
  },
  {
    "objectID": "About Me.html",
    "href": "About Me.html",
    "title": "About Me",
    "section": "",
    "text": "Name\nCareer aspirations"
  },
  {
    "objectID": "About Me.html#bibliography",
    "href": "About Me.html#bibliography",
    "title": "About Me",
    "section": "",
    "text": "Name\nCareer aspirations"
  },
  {
    "objectID": "About Me.html#resume",
    "href": "About Me.html#resume",
    "title": "About Me",
    "section": "Resume",
    "text": "Resume\n\nAdd"
  },
  {
    "objectID": "About Me.html#hobbies",
    "href": "About Me.html#hobbies",
    "title": "About Me",
    "section": "Hobbies",
    "text": "Hobbies\n\nfootball\ntravel\nmusic"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Chloe Downes",
    "section": "",
    "text": "Linkedin\n  \n  \n    \n     Github\n  \n\n  \n  \nUPDATE\nMini paragraph about self.\n\n\nUPDATE\nUniversity of California, San Diego | San Diego, CA PhD in Mathematics | Sept 2011 - June 2015\nMacalester College | St.Â Paul MA B.A in Economics | Sept 2007 - June 2011\n\n\n\nUPDATE\nWengo Analytics | Head Data Scientist | April 2018 - present\nGeoScynce | Chief Analyst | Sept 2012 - April 2018"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Chloe Downes",
    "section": "",
    "text": "UPDATE\nUniversity of California, San Diego | San Diego, CA PhD in Mathematics | Sept 2011 - June 2015\nMacalester College | St.Â Paul MA B.A in Economics | Sept 2007 - June 2011"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Chloe Downes",
    "section": "",
    "text": "UPDATE\nWengo Analytics | Head Data Scientist | April 2018 - present\nGeoScynce | Chief Analyst | Sept 2012 - April 2018"
  }
]